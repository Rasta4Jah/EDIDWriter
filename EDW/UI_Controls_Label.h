#ifndef UI_CONTROLS_LABEL_H
#define UI_CONTROLS_LABEL_H

// Includes ////////////////////////////////////////////////////////////////

#include "UI_Control.h"
#include "UI_Common.h"

// Classes /////////////////////////////////////////////////////////////////

namespace UI
{
	class Window;
	class Font;

	namespace Controls
	{
		class Label : public Control
		{
		public:

			////////////////////////////////////////////////////////////////////
			// Public //////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////

			// Constants ///////////////////////////////////////////////////////

			static const UINT DefaultFormat = DT_SINGLELINE | DT_VCENTER;

			// Functions ///////////////////////////////////////////////////////

			Label(const Window &window, const std::wstring &text, UINT format = DefaultFormat);

			TextColors GetTextColors() const;
			bool SetTextColors(const TextColors &colors);

			////////////////////////////////////////////////////////////////////

		private:

			////////////////////////////////////////////////////////////////////
			// Private /////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////

			// Functions ///////////////////////////////////////////////////////

			LRESULT OnDrawItem(WPARAM wParam, LPARAM lParam);
			LRESULT OnCtlColor(WPARAM wParam, LPARAM lParam);
			bool AddMessages();

			// Variables ///////////////////////////////////////////////////////

			UINT format;

			////////////////////////////////////////////////////////////////////
		};
	}
}

////////////////////////////////////////////////////////////////////////////

#endif
